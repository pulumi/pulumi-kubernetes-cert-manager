// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetescertmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertManagerCrdsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertManagerCrdsArgs Empty = new CertManagerCrdsArgs();

    /**
     * Enable customization of the installation of CRDs. Cannot be enabled with installCRDs.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable customization of the installation of CRDs. Cannot be enabled with installCRDs.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Keep CRDs on chart uninstall. Setting to false will remove CRDs when the chart is removed.
     * 
     */
    @Import(name="keep")
    private @Nullable Output<Boolean> keep;

    /**
     * @return Keep CRDs on chart uninstall. Setting to false will remove CRDs when the chart is removed.
     * 
     */
    public Optional<Output<Boolean>> keep() {
        return Optional.ofNullable(this.keep);
    }

    private CertManagerCrdsArgs() {}

    private CertManagerCrdsArgs(CertManagerCrdsArgs $) {
        this.enabled = $.enabled;
        this.keep = $.keep;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertManagerCrdsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertManagerCrdsArgs $;

        public Builder() {
            $ = new CertManagerCrdsArgs();
        }

        public Builder(CertManagerCrdsArgs defaults) {
            $ = new CertManagerCrdsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Enable customization of the installation of CRDs. Cannot be enabled with installCRDs.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable customization of the installation of CRDs. Cannot be enabled with installCRDs.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param keep Keep CRDs on chart uninstall. Setting to false will remove CRDs when the chart is removed.
         * 
         * @return builder
         * 
         */
        public Builder keep(@Nullable Output<Boolean> keep) {
            $.keep = keep;
            return this;
        }

        /**
         * @param keep Keep CRDs on chart uninstall. Setting to false will remove CRDs when the chart is removed.
         * 
         * @return builder
         * 
         */
        public Builder keep(Boolean keep) {
            return keep(Output.of(keep));
        }

        public CertManagerCrdsArgs build() {
            $.keep = Codegen.booleanProp("keep").output().arg($.keep).def(false).getNullable();
            return $;
        }
    }

}
