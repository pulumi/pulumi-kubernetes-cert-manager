// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.KubernetesCertManager.Inputs
{

    public sealed class CertManagerWebhookArgs : global::Pulumi.ResourceArgs
    {
        [Input("affinity")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.AffinityArgs>? Affinity { get; set; }

        /// <summary>
        /// Container Security Context to be set on the webhook component container. ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
        /// </summary>
        [Input("containerSecurityContext")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.SecurityContextArgs>? ContainerSecurityContext { get; set; }

        [Input("deploymentAnnotations")]
        private InputMap<string>? _deploymentAnnotations;

        /// <summary>
        /// Optional additional annotations to add to the webhook Deployment
        /// </summary>
        public InputMap<string> DeploymentAnnotations
        {
            get => _deploymentAnnotations ?? (_deploymentAnnotations = new InputMap<string>());
            set => _deploymentAnnotations = value;
        }

        [Input("extraArgs")]
        private InputList<string>? _extraArgs;

        /// <summary>
        /// Optional additional arguments for webhook
        /// </summary>
        public InputList<string> ExtraArgs
        {
            get => _extraArgs ?? (_extraArgs = new InputList<string>());
            set => _extraArgs = value;
        }

        /// <summary>
        /// Specifies if the webhook should be started in hostNetwork mode. Required for use in some managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico), because control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working Since the default port for the webhook conflicts with kubelet on the host network, `webhook.securePort` should be changed to an available port if running in hostNetwork mode.
        /// </summary>
        [Input("hostNetwork")]
        public Input<bool>? HostNetwork { get; set; }

        [Input("image")]
        public Input<Inputs.CertManagerImageArgs>? Image { get; set; }

        /// <summary>
        /// Liveness probe values. Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
        /// </summary>
        [Input("livenessProbe")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.ProbeArgs>? LivenessProbe { get; set; }

        [Input("loadBalancerIP")]
        public Input<string>? LoadBalancerIP { get; set; }

        [Input("mutatingWebhookConfigurationAnnotations")]
        private InputMap<string>? _mutatingWebhookConfigurationAnnotations;

        /// <summary>
        /// Optional additional annotations to add to the webhook MutatingWebhookConfiguration
        /// </summary>
        public InputMap<string> MutatingWebhookConfigurationAnnotations
        {
            get => _mutatingWebhookConfigurationAnnotations ?? (_mutatingWebhookConfigurationAnnotations = new InputMap<string>());
            set => _mutatingWebhookConfigurationAnnotations = value;
        }

        [Input("nodeSelector")]
        private InputMap<string>? _nodeSelector;
        public InputMap<string> NodeSelector
        {
            get => _nodeSelector ?? (_nodeSelector = new InputMap<string>());
            set => _nodeSelector = value;
        }

        [Input("podAnnotations")]
        private InputMap<string>? _podAnnotations;

        /// <summary>
        /// Optional additional annotations to add to the webhook Pods
        /// </summary>
        public InputMap<string> PodAnnotations
        {
            get => _podAnnotations ?? (_podAnnotations = new InputMap<string>());
            set => _podAnnotations = value;
        }

        [Input("podLabels")]
        private InputMap<string>? _podLabels;

        /// <summary>
        /// Optional additional labels to add to the Webhook Pods
        /// </summary>
        public InputMap<string> PodLabels
        {
            get => _podLabels ?? (_podLabels = new InputMap<string>());
            set => _podLabels = value;
        }

        /// <summary>
        /// Readiness probe values. Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
        /// </summary>
        [Input("readinessProbe")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.ProbeArgs>? ReadinessProbe { get; set; }

        [Input("replicaCount")]
        public Input<int>? ReplicaCount { get; set; }

        [Input("resources")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.ResourceRequirementsArgs>? Resources { get; set; }

        /// <summary>
        /// The port that the webhook should listen on for requests. In GKE private clusters, by default kubernetes apiservers are allowed to talk to the cluster nodes only on 443 and 10250. so configuring securePort: 10250, will work out of the box without needing to add firewall rules or requiring NET_BIND_SERVICE capabilities to bind port numbers &lt;1000
        /// </summary>
        [Input("securePort")]
        public Input<int>? SecurePort { get; set; }

        /// <summary>
        /// Pod Security Context to be set on the webhook component Pod. ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
        /// </summary>
        [Input("securityContext")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.PodSecurityContextArgs>? SecurityContext { get; set; }

        [Input("serviceAccount")]
        public Input<Inputs.CertManagerServiceAccountArgs>? ServiceAccount { get; set; }

        [Input("serviceAnnotations")]
        private InputMap<string>? _serviceAnnotations;

        /// <summary>
        /// Optional additional annotations to add to the webhook service
        /// </summary>
        public InputMap<string> ServiceAnnotations
        {
            get => _serviceAnnotations ?? (_serviceAnnotations = new InputMap<string>());
            set => _serviceAnnotations = value;
        }

        [Input("serviceLabels")]
        private InputMap<string>? _serviceLabels;

        /// <summary>
        /// Optional additional labels to add to the Webhook Service
        /// </summary>
        public InputMap<string> ServiceLabels
        {
            get => _serviceLabels ?? (_serviceLabels = new InputMap<string>());
            set => _serviceLabels = value;
        }

        /// <summary>
        /// Specifies how the service should be handled. Useful if you want to expose the webhook to outside of the cluster. In some cases, the control plane cannot reach internal services.
        /// </summary>
        [Input("serviceType")]
        public Input<string>? ServiceType { get; set; }

        [Input("strategy")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Apps.V1.DeploymentStrategyArgs>? Strategy { get; set; }

        [Input("timeoutSeconds")]
        public Input<int>? TimeoutSeconds { get; set; }

        [Input("tolerations")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1.TolerationArgs>? _tolerations;
        public InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1.TolerationArgs> Tolerations
        {
            get => _tolerations ?? (_tolerations = new InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1.TolerationArgs>());
            set => _tolerations = value;
        }

        /// <summary>
        /// Overrides the mutating webhook and validating webhook so they reach the webhook service using the `url` field instead of a service.
        /// </summary>
        [Input("url")]
        public Input<Inputs.CertManagerWebhookURLArgs>? Url { get; set; }

        [Input("validatingWebhookConfigurationAnnotations")]
        private InputMap<string>? _validatingWebhookConfigurationAnnotations;

        /// <summary>
        /// Optional additional annotations to add to the webhook ValidatingWebhookConfiguration
        /// </summary>
        public InputMap<string> ValidatingWebhookConfigurationAnnotations
        {
            get => _validatingWebhookConfigurationAnnotations ?? (_validatingWebhookConfigurationAnnotations = new InputMap<string>());
            set => _validatingWebhookConfigurationAnnotations = value;
        }

        public CertManagerWebhookArgs()
        {
        }
        public static new CertManagerWebhookArgs Empty => new CertManagerWebhookArgs();
    }
}
